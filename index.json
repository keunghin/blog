[{"categories":null,"content":"ArchLinux安装参考链接 ArchLinux Installation guide archlinux 简明指南 篝ノ雾枝的魔法学院 ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:1:0","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#archlinux安装参考链接"},{"categories":null,"content":"获取镜像列表 此方法写在.zshrc里，用命令行快捷进行替代。 #注意：在--sort rate中，有些镜像无法进行评分，会在命令行下弹出警号（WARNING） sudo reflector --country China --age 6 --latest 6 --fastest 6 --threads 6 --sort rate --protocol https --save /etc/pacman.d/mirrorlist 镜像下好之后，删除tuna源(好几次下载失败，用的人太多了），用bfsu或opentuna等其他镜像源。 ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:2:0","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#获取镜像列表"},{"categories":null,"content":"开发环境","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:3:0","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#开发环境"},{"categories":null,"content":"JavaJava Java-ArchWiki sudo pacman -S java-runtime-common java-environment-common yay jdk8 #选择 extra/jdk8-openjdk 使用 archlinux-java 命令来管理 Java 环境 列举 Java 环境： archlinux-java status 选择 Java 环境： sudo archlinux-java set java-8-openjdk ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:3:1","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#java"},{"categories":null,"content":"GoGo Go-ArchWiki sudo pacman -S go go-tools 第二种方法是 gcc-go。 若开发环境中用到 JetBrains 的 IDE 则必须使用go ，否则 IDE 无法在 /usr/lib/go 下找到 Go SDK。 原文：If you are using a Jetbrains IDE and the Go plugin cannot find your Go SDK path, you might be using an incompatible package. Remove the gcc-go package and replace it with go. If your $GOPATH is set, the IDE should now be able to find your Go SDK at /usr/lib/go. 配置环境变量 GOPATH ，放在用户目录(/usr/local/bin)下的 go/ 文件夹放置 Go 相关文件 vim ~/.zshrc # OR ~/.bashrc OR ~/.profile export GOPATH=~/go export PATH=$PATH:$GOPATH/bin 由于某些特殊的原因，国内无法很好地拉取 Go 相关的软件包。建议使用 goproxy/goproxy.cn ，只需在拉取前输入： export GOPROXY=https://goproxy.cn ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:3:2","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#go"},{"categories":null,"content":"修改引导程序安装引导程序 编辑/etc/default/grub 文件。加入quiet splash nowatchdog modprobe.blacklist=nouveau nmi_watchdog=0 pcie_aspm=force barrier=0参数。 nowatchdog：提升开机速度 modprobe.blacklist=nouveau：显卡方面 nvidia-drm.modeset=1：DRM kernel mode setting barrier=0 vim /etc/default/grub 最后生成 GRUB 所需的配置文件 grub-mkconfig -o /boot/grub/grub.cfg ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:4:0","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#修改引导程序"},{"categories":null,"content":"提升makepkg编译速度参考链接：Archlinux 提升 makepkg 速度 ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:5:0","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#提升makepkg编译速度"},{"categories":null,"content":"并行编译编辑/etc/makepkg.conf中MAKEFLAGS， 默认值为MAKEFLAGS=\"-J2\"根据电脑CPU核心数(或线程数)进行修改。 ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:5:1","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#并行编译"},{"categories":null,"content":"多线程压缩 #install pigz pbzip2 paru -S pigz pbzip2 #edit /etc/makepkg.conf COMPRESSXZ=(xz -c -z - --threads=0) COMPRESSGZ=(pigz -c -f -n) COMPRESSBZ2=(pbzip2 -c -f) COMPRESSZST=(zstd -c -z -q - --threads=0) ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:5:2","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#多线程压缩"},{"categories":null,"content":"去除Vscode窗口标题栏参考链接：Archlinux 常用软件安装——VsCode 在设置中搜索Title Bar Style，修改为custom。 ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:6:0","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#去除vscode窗口标题栏"},{"categories":null,"content":"常用软件 #Feature packed AUR helper sudo pacman -S paru #paru使用技巧 1.使用选项-S使用paru从AUR安装软件包 paru -S package 2.使用paru删除包 paru -Rs package 3.使用yay清除不需要的依赖项 paru -Yc # The popular and trusted web browser by Google (Stable Channel) #此包command下是google-chrome-stable sudo pacman -S google-chrome # Typora will give you a seamless experience as both a reader and a writer. sudo pacman -S typora #Visual Studio Code (vscode): Editor for building and debugging modern web and cloud applications (official binary version) sudo pacman -S visual-studio-code-bin #A CLI system information tool written in BASH that supports displaying images. sudo pacman -S neofetch #字体 #weather-icons解决polybar的天气控件图标问题 sudo pacman -S noto-fonts noto-fonts-cjk ttf-sarasa-gothic ttf-font-awesome ttf-twemoji ttf-weather-icons #解决双系统时间不同步问题 timedatectl set-local-rtc true ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:0","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#常用软件"},{"categories":null,"content":"Trash-cliTrash-cli中文非官方教程 #比rm -rf保险的删除文件夹，删除文件到回收站里 sudo pacman -S trash-cli trash-put： 删除文件和目录（仅放入回收站中） trash-list ：列出被删除了的文件和目录 trash-restore：从回收站中恢复文件或目录 trash. trash-rm：删除回收站中的文件 trash-empty：清空回收站 ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:1","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#trash-cli"},{"categories":null,"content":"SpacemacsSPacemacs官网 在Spacemacs中打开教程（按住CONTROL键再按h键后松开CONTROL键再按t键会进入中文教程） ctrl + h + t 用于切换vim和emacs的模式（可视化的标识是左下角的蓝标（Emacs）和黄标（Vim）） ctrl + z C-表示当按字符时按住CONTROL键。因此c-f就表示：按住CONTROL键再按f。 M-表示当按字符时按住META（或EDIT或ALT）键。如果键盘上没有META、EDIT或ALT键，用下述方法等效：先按一下ESC键然后松开，再按。用来表示ESC键。 退出Emacs C-x C-c （两个连续的组合键） 退出一个正在运行中的命令 C-g 向前移动一屏 C-v 向后移动一屏 M(EDIT or ALT)-v 重绘屏幕，并将光标所在行置于屏幕的中央 #CONTROL-L C-l 找到光标，留意其附近的文字，然后按C-l。此时会发现其光标附近的文字与之前相同，位置却变为屏幕的中心。如果再次按C-l，附近的文字将移动到屏幕的顶端。再次按住C-l，文字将移动到低端 PageUp和PageDn在emacs和vim下都可以使用 上下左右四个方向移动 #上一行——previous(上一行) C-p #下一行——next(下一行) C-n #向左移——backward(回退) C-b #向右移——forward(前进) C-f 常用命令 #移动到该词末尾(词：英文以英文单词为准，中文以下一个标点符号为准) #如果光标处于词与词的空白处，M-f会移动到下一个词的末尾 M-f #和M-f一样，方向相反 M-b #向右移动一个字符 C-f #向左移动一个字符 C-b #向右移动一个词【对中文是移动到下一个标点符号】 M-f #向左移动一个词【对中文是移动到上一个标点符号】 M-b #移动到下一行 C-n #移动到上一行 C-p #移动到行首 C-a #移动到行尾 C-e #移动到(每句)句首 M-a #移动到(每句)句尾 M-e #移动到所有文字的最开头(需要辅以shift) #M==Alt or EDIT M-\u003c #移动到所有文字的最末尾(需要辅以shift) #M==Alt or EDIT M-\u003e 命令参数 #C-u数字参数，为一个命令指定数字参数 #数字参数(前缀参数)：这个参数是先于使用它的命令而输入的 #先输入C-u，然后输入数字作为参数，最后再输入命令(推荐) #另一种方式，按住META(或EDIT或ALAT)键，然后输入数字 C-u + 数字 + 命令 终止命令 #安全地终止这条命令 #终止一条执行过久的命令 #取消数字参数和只输入到一半的命令 C-g #取消\u003cESC\u003e，再连按两次\u003cESC\u003e 被禁用的命令(DISABLED COMMANDS) #在用到了Emacs被禁用的命令，Emacs会显示提示信息，告知此命令的用处 #“n” -\u003e 拒绝使用 窗格(WINDOWS) #只保留一个窗格(关掉其它所有窗格) #保留光标所在的窗格，将其扩大到整个屏幕，同时关掉所有其它窗格 C-x 1 插入与删除(INSERTING AND DELETING) #删除光标前的一个字符 \u003cDEL\u003e #删除光标后的一个字符 c-d #移除光标前的一个词 M-\u003cDEL\u003e #移除光标后的一个词 M-d #移除从光标到“行尾”间的字符 C-k #移除从光标到“句尾”间的字符 M-k 撤销(UNDO) ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:2","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#spacemacs"},{"categories":null,"content":"N卡安装参考链接 打开ctrl+f搜索nvidia就能找到 注：以下均在root模式下进行(用户模式下也得获取管理员权限) 安装最新版的nvidia驱动后，先禁用窗口登陆器的自启动，打开/etc/X11/xorg.conf，注释以下内容 #Section \"Device\" # Identifier \"Device0\" # Driver \"nvidia\" # VendorName \"NVIDIA Corporation\" # BusID \"PCI:1:0:0\" #EndSection 在grub下的linux启动选项中添加modprobe.blacklist=nouveau，完成后，grub-mkconfig -o /boot/grub/grub.cfg刷新下。 之后，生成一个默认的nvidia xorg配置文件， nvidia-xconfig --prime 运行成功，文件将生成在/etgc/X11目录下xorg.conf文件 编辑xorg.conf文件，实现 offload 功能（就是混合模式）。 [更多窗口管理器，参考链接] NVIDIA_Optimus 将以下内容复制粘贴进去(或者修改原文件的内容，与下方一致) 注：BusID可以不用修改 Section \"ServerLayout\" Identifier \"layout\" Screen 0 \"iGPU\" Option \"AllowNVIDIAGPUScreens\" EndSection Section \"Device\" Identifier \"iGPU\" Driver \"modesetting\" BusID \"PCI:0:2:0\" EndSection Section \"Screen\" Identifier \"iGPU\" Device \"iGPU\" EndSection Section \"Device\" Identifier \"nvidia\" Driver \"nvidia\" BusID \"PCI:1:0:0\" EndSection ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:3","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#n卡安装"},{"categories":null,"content":"docker配置v2rayav2raya_wiki 在下载v2raya官方docker镜像前，需要调整以下配置，否则会报以下错误： WARNING: IPv4 forwarding is disabled. Networking will not work. 参考：Docker与Linux ip_forward数据包转发 解决方法： # 检查宿主机的ip_forward cat /proc/sys/net/ipv4/ip_forward # 编辑或修改/etc/sysctl.conf net.ipv4.ip_forward=1 # 查看当前的ip_forward sudo sysctl -p # 重启NetworkManager和docker服务 sudo systemctl restart NetworkManager sudo systemctl restart docker 修改之后，进行官方镜像的配置 # run v2raya docker run -d \\ --restart=always \\ --privileged \\ --network=host \\ --name v2raya \\ -v /lib/modules:/lib/modules \\ -v /etc/v2raya:/etc/v2raya \\ mzz2017/v2raya 安装镜像后，v2raya默认地址是0.0.0.0:2017。 因为已经打开了IP转发，面板设置里默认开启IP转发。之后，可根据个人喜好或官方建议进行配置。 个人配置： 透明代理：关闭 IP转发和端口分享：关闭 防止DNS污染：仅防止DNS劫持(快速) 其他默认 作者使用的是端口代理方式即 hp() { export https_proxy=http://127.0.0.1:20171 export http_proxy=http://127.0.0.1:20171 export all_proxy=http://127.0.0.1:20171 echo \"https_proxy\"=$https_proxy echo \"http_proxy\"=$http_proxy echo \"all_proxy\"=$all_proxy } np() { unset https_proxy unset http_proxy unset all_proxy echo \"https_proxy\" echo \"http_proxy\" echo \"all_proxy\" } ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:4","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#docker配置v2raya"},{"categories":null,"content":"clash自动更新订阅参考链接： Clash自动更新订阅配置 clash-arch自启更新订阅 安装 sudo pacman -S clash 配置通过systemctl管理Clash的进程，对应clash@.service文件。 通过两个脚本start-clash.sh和stop-clash.sh实现开启更新订阅。 这里的%i指当前用户。 clash@.service # edit and save this file to /usr/lib/systemd/system/clash@.service [Unit] Description=A rule based proxy in Go for %i. Wants=network-online.target After=network-online.target [Service] WorkingDirectory=/home/%i/.config/clash Type=simple User=%i Restart=on-abort ExecStart=/home/%i/.config/clash/start-clash.sh ExecStop=/home/%i/.config/clash/stop-clash.sh [Install] WantedBy=multi-user.target start-clash.sh #!/bin/bash #保存PID文件 echo $$ \u003e ${HOME}/.config/clash/clash.pid # 订阅链接下载地址 CLASH_URL=\"你的订阅链接\" # 对比新的文件和旧的文件有什么不同 diff ${HOME}/.config/clash/config.yaml \u003c(curl -s ${CLASH_URL}) #如果两个文件一致，就直接开启clash，如果不一致就覆盖原文件 if [ \"$?\" == 0 ] then /usr/bin/clash else curl -L -o ${HOME}/.config/clash/config.yaml ${CLASH_URL} /usr/bin/clash fi stop-clash.sh 注意： rm命令也可以删除，作者使用的是trash-put进行删除。 #!/bin/bash PID=`cat ${HOME}/.config/clash/clash.pid` kill -9 ${PID} trash-put ${HOME}/.config/clash/clash.pid 写好后，给start-clash.sh和stop-clash.sh赋予执行权限 chmod +x stop-clash.sh start-clash.sh 使用systemctl管理 sudo systemctl enable --now clash@%i ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:5","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#clash自动更新订阅"},{"categories":null,"content":"clash自动更新订阅参考链接： Clash自动更新订阅配置 clash-arch自启更新订阅 安装 sudo pacman -S clash 配置通过systemctl管理Clash的进程，对应clash@.service文件。 通过两个脚本start-clash.sh和stop-clash.sh实现开启更新订阅。 这里的%i指当前用户。 clash@.service # edit and save this file to /usr/lib/systemd/system/clash@.service [Unit] Description=A rule based proxy in Go for %i. Wants=network-online.target After=network-online.target [Service] WorkingDirectory=/home/%i/.config/clash Type=simple User=%i Restart=on-abort ExecStart=/home/%i/.config/clash/start-clash.sh ExecStop=/home/%i/.config/clash/stop-clash.sh [Install] WantedBy=multi-user.target start-clash.sh #!/bin/bash #保存PID文件 echo $$ ${HOME}/.config/clash/clash.pid # 订阅链接下载地址 CLASH_URL=\"你的订阅链接\" # 对比新的文件和旧的文件有什么不同 diff ${HOME}/.config/clash/config.yaml ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:5","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#安装"},{"categories":null,"content":"clash自动更新订阅参考链接： Clash自动更新订阅配置 clash-arch自启更新订阅 安装 sudo pacman -S clash 配置通过systemctl管理Clash的进程，对应clash@.service文件。 通过两个脚本start-clash.sh和stop-clash.sh实现开启更新订阅。 这里的%i指当前用户。 clash@.service # edit and save this file to /usr/lib/systemd/system/clash@.service [Unit] Description=A rule based proxy in Go for %i. Wants=network-online.target After=network-online.target [Service] WorkingDirectory=/home/%i/.config/clash Type=simple User=%i Restart=on-abort ExecStart=/home/%i/.config/clash/start-clash.sh ExecStop=/home/%i/.config/clash/stop-clash.sh [Install] WantedBy=multi-user.target start-clash.sh #!/bin/bash #保存PID文件 echo $$ ${HOME}/.config/clash/clash.pid # 订阅链接下载地址 CLASH_URL=\"你的订阅链接\" # 对比新的文件和旧的文件有什么不同 diff ${HOME}/.config/clash/config.yaml ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:5","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#配置"},{"categories":null,"content":"i3lock-color 参考链接： i3lock各个衍生介绍 美化链接 加入系统服务 美化配置文件 #!/bin/sh # Terminate already running bar instances killall -q i3lock # Wait until the processes have been shut down while pgrep -u $UID -x i3lock \u003e/dev/null; do sleep 1; done BLANK='#EAEAEF' CLEAR='#1e90ff' DEFAULT='#1e90ff' TEXT='#483d8b' WRONG='#ffa500' VERIFYING='#B5E6B5' i3lock \\ --insidever-color=$CLEAR \\ --ringver-color=$VERIFYING \\ \\ --insidewrong-color=$CLEAR \\ --ringwrong-color=$WRONG \\ \\ --inside-color=$BLANK \\ --ring-color=$DEFAULT \\ --line-color=$BLANK \\ --separator-color=$DEFAULT \\ \\ --verif-color=$TEXT \\ --wrong-color=$TEXT \\ --time-color=$TEXT \\ --date-color=$TEXT \\ --layout-color=$TEXT \\ --keyhl-color=$WRONG \\ --bshl-color=$WRONG \\ \\ --screen 1 \\ --blur 5 \\ --clock \\ --indicator \\ --time-str=\"%H:%M:%S\" \\ --date-str=\"%A, %m %Y\" \\ --keylayout 1 \\ 加入系统服务，休眠开启后锁屏 # edit and save this file to /usr/lib/systemd/system/lock@.service [Unit] Description=Lock screen on suspend for %i Before=sleep.target suspend.target hibernate.target hybrid-sleep.target [Service] User=%i Environment=DISPLAY=:0 Type=forking ExecStartPre= -/usr/bin/pkill -u %u unison ExecStart=/home/%i/文件路径 ExecStartPost=/usr/bin/sleep 1 [Install] WantedBy=sleep.target suspend.target hibernate.target hybrid-sleep.target 自启动 sudo systemctl enable lock@%i ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:6","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#i3lock-color"},{"categories":null,"content":"obs-studio在arch kde下录制麦克风音频的时候，出现了即使上噪声抑制依旧无法屏蔽笔记本本身的噪音，这里给出解决办法以及来源 来源：Linux 系統降噪 #编辑文件 sudo nano /etc/pulse/default.pa #将下行加入到“Echo Cancellation”的地方 load-module module-echo-cancel #重启PulseAudio (pulseaudio -k)就解决了 如果遇到在obs运行状态下，修改的以上配置文件，还需重启obs即可。 ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:7","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#obs-studio"},{"categories":null,"content":"Blob Emoji参考链接：在 Linux 下使用 Blob Emoji noto-fonts-emoji-blob 在~/.config/fontconfig/70-emojione-color.conf下写入 \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003c!DOCTYPE fontconfig SYSTEM \"fonts.dtd\"\u003e \u003cfontconfig\u003e \u003cmatch\u003e \u003ctest name=\"family\"\u003e\u003cstring\u003esans-serif\u003c/string\u003e\u003c/test\u003e \u003cedit name=\"family\" mode=\"prepend\" binding=\"strong\"\u003e \u003cstring\u003eBlobmoji\u003c/string\u003e \u003c/edit\u003e \u003c/match\u003e \u003cmatch\u003e \u003ctest name=\"family\"\u003e\u003cstring\u003eserif\u003c/string\u003e\u003c/test\u003e \u003cedit name=\"family\" mode=\"prepend\" binding=\"strong\"\u003e \u003cstring\u003eBlobmoji\u003c/string\u003e \u003c/edit\u003e \u003c/match\u003e \u003cmatch\u003e \u003ctest name=\"family\"\u003e\u003cstring\u003emonospace\u003c/string\u003e\u003c/test\u003e \u003cedit name=\"family\" mode=\"prepend\" binding=\"strong\"\u003e \u003cstring\u003eBlobmoji\u003c/string\u003e \u003c/edit\u003e \u003c/match\u003e \u003cmatch\u003e \u003ctest name=\"family\"\u003e\u003cstring\u003eApple Color Emoji\u003c/string\u003e\u003c/test\u003e \u003cedit name=\"family\" mode=\"prepend\" binding=\"strong\"\u003e \u003cstring\u003eBlobmoji\u003c/string\u003e \u003c/edit\u003e \u003c/match\u003e \u003c/fontconfig\u003e 刷新字体缓存 fc-cache -f -v ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:8","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#blob-emoji"},{"categories":null,"content":"proxychains-ng paru -S proxychains-ng 在最后一行加上自己的socks5代理socks5 127.0.0.1 port ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:7:9","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#proxychains-ng"},{"categories":null,"content":"ArchLinux-Tips journalctl -p 4 -b #-b选项可以筛选出本次boot直到当前的记录 #-p选项可以筛选出严重等级高于某一值的记录 #\"emerg\" (0), \"alert\" (1), \"crit\" (2), \"err\" (3), **\"warning\" (4)**, \"notice\" (5), \"info\" (6), \"debug\" (7) pgrep -l 进程名字(\"进程名字\") ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:8:0","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#archlinux-tips"},{"categories":null,"content":"SSD配置如果安装在SSD上，可以选择以下命令 sudo systemctl enable --now fstrim.timer ","date":"2022-02-13","objectID":"/arch-linux-i3-layout/:9:0","series":null,"tags":[],"title":"archLinux-i3-配置","uri":"/arch-linux-i3-layout/#ssd配置"},{"categories":null,"content":" 一定要坚持，要保持长时间学习，甚至终生学习的态度。 一定要动手，不管例子多么简单，建议至少自己动手敲一遍看看是否理解了里头的细枝末节。 一定要学会思考，思考为什么要这样，而不是那样。还要举一反三地思考。 不要乱买书，不要乱追求新技术新名词，基础的东西经过很长时间积累，会在未来至少10年通用。 回顾一下历史，看看历史时间线上技术的发展，你才能明白明天会是什么样的。 有时间看书，就先不要看专栏；有时间看专栏，就先不要看各种博客；有条件看官方文档，就先不要看速度教程。 人生一世，选条路，不退让，不更改，一直走到尽头，是件幸事。「庆余年」 所谓的黑色电影并不是一种类型，它不像西部片和犯罪片那样由环境和冲突来界定，而是由更微妙的调子和情绪特点来界定。「保罗·施耐德《黑色电影札记》」 不结同心人，空结同心草。「［唐］薛涛《春望词四首》其三」 ","date":"2022-02-13","objectID":"/hugo-theme-install/:0:0","series":null,"tags":["tattle"],"title":"摘录","uri":"/hugo-theme-install/#"},{"categories":null,"content":"这是网站的第一篇文章，历时半个多月，参阅了很多大佬的文章，感谢各位大佬的分享的优质资源。 链接汇总： 雨临Lewis 就是这个范儿 公子 Hugo部署到Github Ahrisy の 碎碎念 回忆中的明天 南岩666のBlog 少数派 Shuzang’s Blog 小林书架 风月 hugo博客添加评论系统Valine 为什么你没授权就能用大大的作品？？—“知识共享”（CC协议）简单介绍 creativecommons许可协议 友链添加 至此，本站终于建站成功！ 关于首页头像点击后会跳转到Posts下，办法是： 将themes/LoveIt/layouts/partials/home/目录下的profile.html复制到根目录[指：网站根目录]下的对应位置，将文件中的 \u003ca href=\"{{ $url}}\"{{ with .Title | default .Name }} title=\"{{ . }}\"{{ end }}{{ if (urls.Parse $url).Host }} rel=\"noopener noreffer\" target=\"_blank\"{{ end }}\u003e {{- dict \"Src\" $avatar | partial \"plugin/image.html\" -}} \u003c/a\u003e 中的代码修改为 \u003ca {{ if (urls.Parse $url).Host }} rel=\"noopener noreffer\" target=\"_blank\"{{ end }}\u003e {{- dict \"Src\" $avatar | partial \"plugin/image.html\" -}} \u003c/a\u003e 之后鼠标再滑动到这时，就不会变成手掌点击模样了。 ","date":"2022-02-13","objectID":"/tittle-tattle/:0:0","series":null,"tags":["tattle"],"title":"建站","uri":"/tittle-tattle/#"}]